name: Build Wheels
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04, macos-13]
        arch: [x86_64]
        include:
          - os: macos-15
            arch: arm64
          - os: ubuntu-24.04-arm
            arch: aarch64
          - os: ubuntu-22.04-arm
            arch: aarch64
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build wheels
        uses: pypa/cibuildwheel@main
        with:
          package-dir: py-bindings
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          OMPL_BUILD_ARCH: ${{ matrix.arch }}
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_BUILD: cp3{10,11,12}-macosx_{x86_64,arm64} cp3{9,10,11,12}-manylinux_{x86_64,aarch64}
          CIBW_BUILD_VERBOSITY: 1
          # Set macOS deployment target for ARM64 to 15.0 to match dependencies
          CIBW_MACOS_DEPLOYMENT_TARGET_ARM64: "15.0"

      - uses: actions/cache@v4
        id: cache-wheel
        with:
          path: wheelhouse
          key: wheel-${{ matrix.os }}-${{ matrix.CIBW_BUILD }}

      - uses: docker/setup-qemu-action@v3
        if: steps.cache-wheel.outputs.cache-hit != 'true' && runner.os == 'Linu

      - uses: actions/upload-artifact@v4
        with:
          path: wheelhouse/*.whl
          name: wheels-${{ matrix.os }}-${{ matrix.CIBW_BUILD }}

  prerelease:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency:
      group: push-${{ github.ref_name }}-prerelease
      cancel-in-progress: true
    needs: [build_wheels]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: wheelhouse
          pattern: wheels-*
          merge-multiple: true

      - name: GitHub release
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: true
          tag: "prerelease"
          name: "Development Build"
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          artifacts: "wheelhouse/*"

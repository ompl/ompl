name: Build Wheels
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.target.os }}/cp${{ matrix.python-version }}-${{ matrix.target.suffix }}
    runs-on: ${{ matrix.target.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: ubuntu-24.04
            arch: x86_64
            suffix: manylinux_x86_64
          - os: ubuntu-24.04-arm
            arch: aarch64
            suffix: manylinux_aarch64
          - os: macos-13
            arch: x86_64
            suffix: macosx_x86_64
          - os: macos-15
            arch: arm64
            suffix: macosx_arm64
        python-version: [310, 311, 312, 313]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        with:
          package-dir: bindings
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.target.arch }}
          OMPL_BUILD_ARCH: ${{ matrix.target.arch }}
          CIBW_BUILD: cp${{matrix.python-version}}-${{ matrix.target.suffix }}
          CIBW_SKIP: "cp*-manylinux_i686 cp*-musllinux* cp*-win32"
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="15.0"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target.os }}-${{ matrix.target.arch }}-cp${{ matrix.python-version }}-${{ matrix.target.suffix }}
          path: wheelhouse

  prerelease:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency:
      group: push-${{ github.ref_name }}-prerelease
      cancel-in-progress: true
    needs: [build_wheels]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: wheelhouse
          pattern: wheels-*
          merge-multiple: true

      - name: GitHub release
        uses: ncipollo/release-action@v1.16.0
        with:
          prerelease: true
          tag: "prerelease"
          name: "Development Build"
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          artifacts: "wheelhouse/*"

  publish_pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build_wheels
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/ompl
    permissions:
      id-token: write
    steps:
      - name: Download wheels artifact
        uses: actions/download-artifact@v4
        with:
          path: wheelhouse
          pattern: wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages: wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

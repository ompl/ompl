# Complete Panda Demo Configuration
# This demonstrates explicit VAMP-OMPL configuration via YAML

# Robot Configuration
robot:
  name: "panda"
  description: "Franka Emika Panda 7-DOF manipulator"

# Planning Configuration - Example 1: RRT-Connect with custom parameters
planner:
  name: "RRT-Connect"  # Simple and effective planner
  parameters:
    range: "0.3"                    # Connection range
    intermediate_states: "false"    # Don't store intermediate states               
  planning_time: 5.0
  simplification_time: 1.0
  optimize_path: false

# Alternative Example 2: BIT* with custom parameters (uncomment to use)
# planner:
#   name: "BIT*"
#   parameters:
#     rewire_factor: "1.1"          # Rewiring factor
#     samples_per_batch: "100"      # Samples per batch
#     use_k_nearest: "true"         # Use k-nearest connection strategy
#   planning_time: 10.0
#   simplification_time: 2.0

# Explicit Start Configuration (joint angles in radians)
start_config:
  - 0.0      # panda_joint1: Base rotation
  - -0.785   # panda_joint2: Shoulder 
  - 0.0      # panda_joint3: Upper arm rotation
  - -2.356   # panda_joint4: Elbow
  - 0.0      # panda_joint5: Forearm rotation
  - 1.571    # panda_joint6: Wrist pitch
  - 0.785    # panda_joint7: Wrist roll

# Explicit Goal Configuration (joint angles in radians)
goal_config:
  - 2.35     # panda_joint1: Base rotation
  - 1.0      # panda_joint2: Shoulder
  - 0.0      # panda_joint3: Upper arm rotation
  - -0.8     # panda_joint4: Elbow
  - 0.0      # panda_joint5: Forearm rotation
  - 2.5      # panda_joint6: Wrist pitch
  - 0.785    # panda_joint7: Wrist roll

# Complete Environment Definition: Sphere Cage + Pointcloud Support
# Two rings of spheres creating a challenging navigation scenario
obstacles:
  # Lower ring of spheres (z = 0.25)
  - type: sphere
    name: "sphere_0"
    position: [0.55, 0.0, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_1" 
    position: [0.35, 0.35, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_2"
    position: [0.0, 0.55, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_3"
    position: [-0.55, 0.0, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_4"
    position: [-0.35, -0.35, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_5"
    position: [0.0, -0.55, 0.25]
    radius: 0.15
    
  - type: sphere
    name: "sphere_6"
    position: [0.35, -0.35, 0.25]
    radius: 0.15

  # Upper ring of spheres (z = 0.8)
  - type: sphere
    name: "sphere_7"
    position: [0.35, 0.35, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_8"
    position: [0.0, 0.55, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_9"
    position: [-0.35, 0.35, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_10"
    position: [-0.55, 0.0, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_11"
    position: [-0.35, -0.35, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_12"
    position: [0.0, -0.55, 0.8]
    radius: 0.15
    
  - type: sphere
    name: "sphere_13"
    position: [0.35, -0.35, 0.8]
    radius: 0.15
  # Pointcloud obstacle example
  # - type: pointcloud
  #   name: "obstacle_cloud"
  #   pointcloud_file: "test_pointcloud.xyz"
  #   point_radius: 0.05 

# Output Configuration
output:
  write_path: true
  description: "Panda Sphere Cage Demo - YAML Configuration with Pointcloud Support"

# Visualization Configuration
visualization:
  enabled: true
  auto_start: false
  urdf_path: "external/vamp/resources/panda/panda_spherized.urdf"
  expected_joints: 7
  base_position: [0.0, 0.0, 0.0]
  base_orientation: [0.0, 0.0, 0.0]
  use_fixed_base: true
  description: "Panda robot visualization"
  animation:
    duration: 8.0
    loop: false
    draw_trajectory: true
  display:
    gui: true 
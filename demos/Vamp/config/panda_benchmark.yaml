# VAMP SIMPLE PLANNER BENCHMARK CONFIGURATION
# ============================================
# Simple benchmark configuration showing how to set non-default planners
# with custom parameters. Easy to extend for new planners like AORRTC, BLIT*.

robot:
  name: "panda"
  description: "Franka Emika Panda 7-DOF manipulator"

# Start and goal configurations (joint angles in radians)
start_config: [0.0, -0.785, 0.0, -2.356, 0.0, 1.571, 0.785]
goal_config: [2.35, 1.0, 0.0, -0.8, 0.0, 2.5, 0.785]

# Environment obstacles
obstacles:
  - type: "sphere"
    name: "obstacle_1" 
    position: [0.5, 0.0, 0.5]
    radius: 0.15
  - type: "sphere"
    name: "obstacle_2"
    position: [-0.3, 0.4, 0.3] 
    radius: 0.12
  - type: "sphere"
    name: "obstacle_3"
    position: [0.2, -0.5, 0.7]
    radius: 0.1

# Default planner configuration
planner:
  name: "RRT-Connect"  # Default planner for quick testing
  planning_time: 1.0
  simplification_time: 1.0

# SIMPLE BENCHMARK CONFIGURATION
# ===============================
benchmark:
  experiment_name: "VAMP Simple Planner Comparison"
  runs: 10                   # Number of runs per planner
  timeout: 5.0               # Planning timeout per run (seconds)
  memory_limit: 1000         # Memory limit in MB
  simplify_paths: true       # Enable path simplification
  display_progress: true     # Show progress during benchmarking
  auto_generate_filename: true

  # SIMPLE PLANNER SET - Easy to extend
  # ===================================
  planners:
    # Simple planner set - easy to extend for new planners like AORRTC, BLIT*
    
    - name: "RRT-Connect"
      parameters:
        range: "0.3"                    # Connection range
        intermediate_states: "false"    # Don't store intermediate states

    - name: "BIT*"
      parameters:
        rewire_factor: "1.1"            # Rewiring factor
        samples_per_batch: "100"        # Samples per batch
        use_k_nearest: "true"           # Use k-nearest connection strategy

    - name: "PRM"
      parameters:
        max_nearest_neighbors: "10"     # Maximum nearest neighbors
        connection_strategy: "0"        # Connection strategy (0=k-nearest)

  # To add new planners like AORRTC or BLIT*:
  # 1. Register planner: registerPlanner("AORRTC", [](const auto& si, const auto& params) { ... });
  # 2. Add planner configuration here
  # 3. That's it! No core code modification needed - registry handles everything

# Output configuration
output:
  write_path: true
  path_file: "benchmark_results"
  database_file: "benchmark_database.db"